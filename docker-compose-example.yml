services:
    db:
        image: postgres:13
        restart: always
        ports:
          - '5432:5432'
        environment: 
          POSTGRES_USER: tts
          POSTGRES_PASSWORD: tts_password
        volumes: 
          - db:/var/lib/postgresql/data
        #  - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    cache:
        image: redis:7.0.12-alpine
        restart: always
        ports:
          - '6379:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass lolpassword
        volumes: 
          - cache:/data
    tts-service:
        image: tts-service:latest
        restart: always
        volumes:
          - type: bind
            source: ${GOOGLE_APPLICATION_CREDENTIALS}
            target: /gcp.json
        environment:
          IPV6_BLOCK: DISABLE
          LOG_LEVEL: DEBUG
          BIND_ADDR: 0.0.0.0:20310
          GOOGLE_APPLICATION_CREDENTIALS: "./gcp.json"
          AWS_REGION: eu-east-1
          AWS_ACCESS_KEY_ID: ""
          AWS_SECRET_ACCESS_KEY_ID: ""
          REDIS_HOST: cache
          REDIS_PORT: 6379
          REDIS_PASSWORD: lolpassword
        expose: [20310]
        links: [db, cache]
        depends_on: [cache]
volumes:
  cache:
    driver: local
  db:
    driver: local